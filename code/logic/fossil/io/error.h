/*
 * -----------------------------------------------------------------------------
 * Project: Fossil Logic
 *
 * This file is part of the Fossil Logic project, which aims to develop high-
 * performance, cross-platform applications and libraries. The code contained
 * herein is subject to the terms and conditions defined in the project license.
 *
 * Author: Michael Gene Brockus (Dreamer)
 *
 * Copyright (C) 2024 Fossil Logic. All rights reserved.
 * -----------------------------------------------------------------------------
 */
#ifndef FOSSIL_IO_ERROR_H
#define FOSSIL_IO_ERROR_H

#ifdef __cplusplus
extern "C" {
#endif

typedef enum {
    // Success and General Errors
    FOSSIL_ERROR_OK = 0,
    FOSSIL_ERROR_NULL_POINTER,
    FOSSIL_ERROR_INVALID_ARGUMENT,
    FOSSIL_ERROR_TYPE_MISMATCH,
    FOSSIL_ERROR_INVALID_OPERATION,
    FOSSIL_ERROR_UNKNOWN,
    FOSSIL_ERROR_CUSTOM,
    FOSSIL_ERROR_INTERNAL,
    FOSSIL_ERROR_UNKNOWN_ERROR_CODE,

    // Arithmetic Errors
    FOSSIL_ERROR_OVERFLOW_INT,
    FOSSIL_ERROR_UNDERFLOW_INT,
    FOSSIL_ERROR_OVERFLOW_FLOAT,
    FOSSIL_ERROR_UNDERFLOW_FLOAT,
    FOSSIL_ERROR_DIVISION_BY_ZERO,
    FOSSIL_ERROR_INVALID_CAST,

    // Memory Errors
    FOSSIL_ERROR_OUT_OF_MEMORY,
    FOSSIL_ERROR_MEMORY_CORRUPTION,
    FOSSIL_ERROR_BUFFER_OVERFLOW,
    FOSSIL_ERROR_BUFFER_UNDERFLOW,
    FOSSIL_ERROR_BUFFER_OVERFLOW_STR,
    FOSSIL_ERROR_BUFFER_OVERFLOW_FMT,
    FOSSIL_ERROR_BUFFER_OVERFLOW_FILE,
    FOSSIL_ERROR_BUFFER_OVERFLOW_NET,
    FOSSIL_ERROR_BUFFER_OVERFLOW_CMD,
    FOSSIL_ERROR_BUFFER_OVERFLOW_ENV,
    FOSSIL_ERROR_MEMORY_LEAK,
    FOSSIL_ERROR_MEMORY_ALLOCATION_FAILURE,
    FOSSIL_ERROR_MEMORY_ALIGNMENT_ISSUE,

    // File and I/O Errors
    FOSSIL_ERROR_FILE_CORRUPTION,
    FOSSIL_ERROR_FILE_NOT_FOUND,
    FOSSIL_ERROR_DIRECTORY_NOT_FOUND,
    FOSSIL_ERROR_TOO_MANY_OPEN_FILES,
    FOSSIL_ERROR_IO,
    FOSSIL_ERROR_UNSUPPORTED_OPERATION,
    FOSSIL_ERROR_PIPE,
    FOSSIL_ERROR_SYSTEM_CALL_FAILED,
    FOSSIL_ERROR_PERMISSION_DENIED,
    FOSSIL_ERROR_READ_ONLY_FILESYSTEM,
    FOSSIL_ERROR_FILE_LOCK_FAILED,
    FOSSIL_ERROR_FILE_WRITE_FAILED,
    FOSSIL_ERROR_FILE_READ_FAILED,
    FOSSIL_ERROR_FILE_SEEK_FAILED,
    FOSSIL_ERROR_FILE_CLOSE_FAILED,
    FOSSIL_ERROR_FILE_TRUNCATE_FAILED,
    FOSSIL_ERROR_FILE_TOO_LARGE,
    FOSSIL_ERROR_DEVICE_NOT_READY,
    FOSSIL_ERROR_DEVICE_REMOVED,

    // Resource and Process Errors
    FOSSIL_ERROR_RESOURCE_UNAVAILABLE,
    FOSSIL_ERROR_BUSY,
    FOSSIL_ERROR_DEADLOCK,
    FOSSIL_ERROR_INTERRUPTED,
    FOSSIL_ERROR_LIMIT_REACHED,
    FOSSIL_ERROR_PROCESS,
    FOSSIL_ERROR_PROCESS_CREATION_FAILED,
    FOSSIL_ERROR_PROCESS_EXITED_WITH_ERROR,
    FOSSIL_ERROR_PROCESS_TIMEOUT,
    FOSSIL_ERROR_RESOURCE_DEPLETION,
    FOSSIL_ERROR_THREAD_CREATION_FAILED,
    FOSSIL_ERROR_THREAD_TERMINATION_FAILED,

    // Hardware Errors
    FOSSIL_ERROR_HARDWARE_FAILURE,
    FOSSIL_ERROR_HARD_DISK_FAILURE,
    FOSSIL_ERROR_GPU_FAILURE,
    FOSSIL_ERROR_CPU_OVERHEAT,
    FOSSIL_ERROR_MEMORY_FAILURE,
    FOSSIL_ERROR_HARDWARE_OVERLOAD,
    FOSSIL_ERROR_DEVICE_TIMEOUT,
    FOSSIL_ERROR_POWER_SUPPLY_FAILURE,

    // Network Errors
    FOSSIL_ERROR_NETWORK_FAILURE,
    FOSSIL_ERROR_TIMEOUT,
    FOSSIL_ERROR_UNKNOWN_HOST,
    FOSSIL_ERROR_CONNECTION_REFUSED,
    FOSSIL_ERROR_NETWORK_UNREACHABLE,
    FOSSIL_ERROR_PROTOCOL,
    FOSSIL_ERROR_CONNECTION_RESET,
    FOSSIL_ERROR_DNS_RESOLUTION_FAILED,
    FOSSIL_ERROR_NETWORK_CONGESTION,
    FOSSIL_ERROR_BANDWIDTH_EXCEEDED,
    FOSSIL_ERROR_FIREWALL_BLOCKED,
    FOSSIL_ERROR_SSL_HANDSHAKE_FAILED,
    FOSSIL_ERROR_CERTIFICATE_EXPIRED,
    FOSSIL_ERROR_CERTIFICATE_REVOKED,

    // Security Errors
    FOSSIL_ERROR_SQL_INJECTION,
    FOSSIL_ERROR_XSS_ATTACK,
    FOSSIL_ERROR_CSRF_ATTACK,
    FOSSIL_ERROR_FORMAT_STRING_ATTACK,
    FOSSIL_ERROR_CRYPTOGRAPHIC_WEAKNESS,
    FOSSIL_ERROR_INSECURE_RANDOMNESS,
    FOSSIL_ERROR_INSECURE_CONFIGURATION,
    FOSSIL_ERROR_INSECURE_DESERIALIZATION,
    FOSSIL_ERROR_INSECURE_FILE_HANDLING,
    FOSSIL_ERROR_INSECURE_TEMPORARY_FILES,
    FOSSIL_ERROR_INSECURE_COMMUNICATION,
    FOSSIL_ERROR_INSECURE_AUTHENTICATION,
    FOSSIL_ERROR_INSECURE_ACCESS_CONTROL,
    FOSSIL_ERROR_SESSION_HIJACKING,
    FOSSIL_ERROR_DATA_TAMPERING,
    FOSSIL_ERROR_MAN_IN_THE_MIDDLE_ATTACK,
    FOSSIL_ERROR_PRIVILEGE_ESCALATION,

    // User-Related and External Errors
    FOSSIL_ERROR_USER_ABORT,
    FOSSIL_ERROR_SIGNAL,
    FOSSIL_ERROR_USER_INPUT_TOO_LARGE,
    FOSSIL_ERROR_USER_INPUT_INVALID_FORMAT,
    FOSSIL_ERROR_USER_PERMISSION_REJECTED,

    // Database Errors
    FOSSIL_ERROR_DATABASE_CONNECTION_FAILED,
    FOSSIL_ERROR_DATABASE_QUERY_FAILED,
    FOSSIL_ERROR_DATABASE_TIMEOUT,
    FOSSIL_ERROR_DATABASE_CORRUPTION,
    FOSSIL_ERROR_DATABASE_DEADLOCK,
    FOSSIL_ERROR_DATABASE_LOCK_FAILED,

    // Serialization and Deserialization Errors
    FOSSIL_ERROR_SERIALIZATION_FAILED,
    FOSSIL_ERROR_DESERIALIZATION_FAILED,
    FOSSIL_ERROR_INVALID_SERIALIZATION_FORMAT,
    FOSSIL_ERROR_DATA_CORRUPTION,

    // Miscellaneous Errors
    FOSSIL_ERROR_INDEX_OUT_OF_BOUNDS,
    FOSSIL_ERROR_FORMAT,
    FOSSIL_ERROR_INCOMPATIBLE_VERSION,
    FOSSIL_ERROR_JSON_PARSING_FAILED,
    FOSSIL_ERROR_XML_PARSING_FAILED,
    FOSSIL_ERROR_YAML_PARSING_FAILED,
    FOSSIL_ERROR_INVALID_CHECKSUM,
    FOSSIL_ERROR_TIMER_EXPIRED,
} fossil_status_t;

/**
 * This function is used to report an error message with a formatted string.
 *
 * @param format The format string for the error message.
 * @param ... The additional arguments to be formatted.
 */
void fossil_io_error(const char *format, ...);

/**
 * This function is used to get a human-readable description of an error code.
 *
 * @param error_code The error code for which the description is needed.
 * @return The human-readable description of the error code.
 */
const char *fossil_io_what(fossil_status_t error_code);

#ifdef __cplusplus
}
#endif

#endif /* FOSSIL_IO_FRAMEWORK_H */
